<?php

class ArrTest extends \PHPUnit\Framework\TestCase
{
    protected $data;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->data = [
            'a'   => 1,
            'b'   => 2,
            'web' => ['id' => 1, 'url' => 'houdunwang.com'],
        ];
    }

    /**
     * @test
     */
    public function get()
    {
        $this->assertEquals(\houdunwang\arr\Arr::get($this->data, 'a'), 1);
        $this->assertEquals(\houdunwang\arr\Arr::get($this->data, 'web.id'), 1);
    }

    /**
     * @test
     */
    public function getExtName()
    {
        $data = \houdunwang\arr\Arr::getExtName($this->data, ['web', 'a']);
        $this->assertTrue(! isset($data['a']));
        $this->assertTrue(! isset($data['web']));
    }

    /**
     * @test
     */
    public function set()
    {
        $data = \houdunwang\arr\Arr::set($this->data, 'f.b.c', 99);
        $this->assertEquals(\houdunwang\arr\Arr::get($data, 'f.b.c'), 99);
    }

    /**
     * @test
     */
    public function keyCase()
    {
        //转大写
        $data = \houdunwang\arr\Arr::keyCase($this->data, 1);
        $this->assertTrue(isset($data['A']));
        //转小写
        $data = \houdunwang\arr\Arr::keyCase($this->data, 0);
        $this->assertTrue(isset($data['a']));
    }

    /**
     * @test
     */
    public function intToString()
    {
        $data = ['status' => 0];
        $d    = \houdunwang\arr\Arr::intToString(
            $data,
            ['status' => [0 => '关闭', 1 => '开启']]
        );
        $this->assertEquals($d['_status'], '关闭');
    }

    /**
     * @test
     */
    public function stringToInt()
    {
        $data = ['status' => '1', 'click' => '200'];
        $d    = \houdunwang\arr\Arr::stringToInt($data);
        $this->assertInternalType('int', $d['status']);
    }

    /**
     * @test
     */
    public function filterKeys()
    {
        $d    = ['id' => 1, 'url' => 'houdunwang.com', 'title' => '后盾网'];
        $data = \houdunwang\arr\Arr::filterKeys($d, ['id', 'url']);
        $this->assertCount(1, $data);
        $data = \houdunwang\arr\Arr::filterKeys($d, ['id'], 0);
        $this->assertCount(1, $data);
    }

    /**
     * @test
     */
    public function tree()
    {
        $data = [
            ['cid' => 1, 'pid' => 0, 'title' => '新闻'],
            ['cid' => 2, 'pid' => 1, 'title' => '国内新闻'],
        ];
        $d    = \houdunwang\arr\Arr::tree($data, 'title', 'cid', 'pid');
        $this->assertEquals($d[1]['_level'], 2);
    }

    /**
     * @test
     */
    public function channelList()
    {
        $data = [
            ['cid' => 1, 'pid' => 0, 'title' => '新闻'],
            ['cid' => 2, 'pid' => 1, 'title' => '国内新闻'],
        ];
        $d    = \houdunwang\arr\Arr::channelList(
            $data,
            0,
            "&nbsp;",
            'cid',
            'pid'
        );
        $this->assertEquals($d[2]['_level'], 2);
    }

    /**
     * @test
     */
    public function channelLevel()
    {
        $data = [
            ['cid' => 1, 'pid' => 0, 'title' => '新闻'],
            ['cid' => 2, 'pid' => 1, 'title' => '国内新闻'],
        ];
        $d    = \houdunwang\arr\Arr::channelLevel(
            $data,
            0,
            "&nbsp;",
            'cid',
            'pid'
        );
        $this->assertCount(1, $d);
    }

    /**
     * @test
     */
    public function parentChannel()
    {
        $data = [
            ['cid' => 1, 'pid' => 0, 'title' => '新闻'],
            ['cid' => 2, 'pid' => 1, 'title' => '国内新闻'],
            ['cid' => 3, 'pid' => 1, 'title' => '汽车新闻'],
        ];
        $d    = \houdunwang\arr\Arr::parentChannel($data, 2, 'cid', 'pid');
        $this->assertEquals(1, $d[1]['cid']);
    }

    /**
     * @test
     */
    public function isChild()
    {
        $data  = [
            ['cid' => 1, 'pid' => 0, 'title' => '新闻'],
            ['cid' => 2, 'pid' => 1, 'title' => '国内新闻'],
            ['cid' => 3, 'pid' => 1, 'title' => '汽车新闻'],
        ];
        $state = \houdunwang\arr\Arr::isChild($data, 2, 1, 'cid', 'pid');
        $this->assertTrue($state);
    }

    /**
     * @test
     */
    public function hasChild()
    {
        $data = [
            ['cid' => 1, 'pid' => 0, 'title' => '新闻'],
            ['cid' => 2, 'pid' => 1, 'title' => '国内新闻'],
        ];
        $this->assertTrue(\houdunwang\arr\Arr::hasChild($data, 1, 'pid'));
    }
}